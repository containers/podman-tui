name: validation
on:
  pull_request:

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v6
      - uses: pre-commit/action@v3.0.1

  DCO-check:
    runs-on: ubuntu-latest
    steps:
      - name: get pr commits
        id: 'get-pr-commits'
        uses: tim-actions/get-pr-commits@v1.3.1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: DCO check
        uses: tim-actions/dco@master
        with:
          commits: ${{ steps.get-pr-commits.outputs.commits }}

      - name: check subject line length
        uses: tim-actions/commit-message-checker-with-regex@v0.3.2
        with:
          commits: ${{ steps.get-pr-commits.outputs.commits }}
          pattern: '^.{0,72}(\n.*)*$'
          error: 'Subject too long (max 72)'

  codespell:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: codespell-project/actions-codespell@master
        with:
          check_filenames: true
          skip: ./.git,./vendor,*_test.go,go.sum,go.mod

  vendoring:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v6
        with:
          go-version: '>=1.24'
      - uses: actions/checkout@v5
      - run: |
          go mod tidy
          go mod vendor
          go mod verify
          bash ./hack/tree_status.sh

  golangci-lint:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - uses: actions/setup-go@v6
        with:
          go-version: '1.24'
      - uses: actions/checkout@v5
      - run: |
          bash hack/install_dep.sh
          make .install.golangci-lint
          make lint

  unit_test:
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
    steps:
      - uses: actions/checkout@v5
      - run: |
          # Preparing and running unit tests #
          dnf -y install git-core golang glibc-static git-core wget gcc make
          bash ./hack/install_dep.sh
          export GOBIN=$(pwd)/bin/
          make .install.ginkgo
          make test-unit

  build_binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v6
        with:
          go-version: '>=1.24'
      - uses: actions/checkout@v5
      - run: |
          make all

  goreportcard:
    name: update reportcard
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: creekorful/goreportcard-action@v1.0
